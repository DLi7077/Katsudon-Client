{"version":3,"sources":["Constants/colors.js","Components/Navbar/index.js","Components/Footer/index.js","Assets/Leetcode.png","Views/LandingPage/index.js","Components/UserProfile/index.js","Api/Api.js","Api/UserAPI.js","Assets/languages/C.svg","Assets/languages/CSharp.svg","Assets/languages/C++.svg","Assets/languages/Java.svg","Assets/languages/JavaScript.svg","Assets/languages/Python.svg","Constants/language.js","Assets/languages/TypeScript.svg","Components/SolutionTable/index.js","Components/Codeblock/index.js","Components/TabGroup/index.js","Components/SolutionModal/index.js","Views/ProfilePage/index.js","Components/Filters/UserSearchBar/index.js","Views/Users/index.js","Views/LeetcodeProblems/index.js","Constants/routes.js","App.js","index.js"],"names":["PAGETHEME","PROBLEM_DIFFICULTY","Easy","Medium","Hard","Navbar","props","className","IconButton","style","color","fontSize","to","textDecoration","onClick","changeTheme","classes","icon","Footer","LandingPage","src","LeetcodeLogo","alt","height","difficultyGenerator","solved","total","difficulty","fraction","difficultyTitle","toUpperCase","slice","Tooltip","title","width","UserProfile","userInfo","username","biography","followers","following","profile_picture_url","reduce","accumulator","problem","get","totalSolved","length","Avatar","border","Api","method","endpoint","params","headers","request","url","process","axios","then","res","data","userId","dotenv","UserAPI","getAllUsers","getUserSolutions","getUserProfile","LANGUAGE_LOGOS","C","s","CPP","JavaScript","Java","Python","Python3","TypeScript","LANGUAGE_COMPILE_MAPPING","SolutionTable","table","tableHeader","tableCell","textAlign","margin","padding","paddingInline","fileOpen","languageLogo","overflow","Table","TableHead","TableRow","map","header","idx","TableCell","TableBody","omit","solutions","details","id","display","justifyContent","alignItems","gap","without","keys","language","handleOpenSolutionModel","recent","substring","CodeBlock","atomDark","showLineNumbers","lineNumberStyle","minWidth","showInlineLineNumbers","code","TabGroup","useState","tab","setTab","Tabs","variant","value","onChange","event","newTab","TabIndicatorProps","backgroundColor","tabs","content","Tab","label","textTransform","paddingTop","paddingBottom","marginLeft","SolutionModal","solutionTabs","solutionDetails","runtime","memory","Modal","open","onClose","handleClose","href","target","rel","markup","description","ProfilePage","URL","document","location","searchParams","setUserInfo","setSolutions","isLoading","setLoading","solutionDisplay","setSolutionDisplay","problemBlock","setProblemBlock","solutionsBlock","setSolutionsBlock","user","user_id","_id","catch","setTimeout","useEffect","getUserDetails","CircularProgress","selectStyles","container","provided","state","flexGrow","control","borderRadius","dropdownIndicator","indicatorsContainer","menu","option","isFocused","placeholder","searchIcon","marginTop","nameLabel","avatarIcon","UserSearchBar","clearIndicator","styles","selectedUser","setSelectedUser","options","allUsers","formatOptionLabel","Users","users","setUsers","currrentUserDetails","setCurrentUserDetails","userDetails","pick","getSelectedUserDetails","Button","LeetcodeProblems","routes","path","element","App","pageColor","setPageColor","COMPONENT_ROUTES","component","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.fa356fba.chunk.js","sourcesContent":["export const PAGETHEME = {\r\n  Orange: \"#FFAA7A\",\r\n  Blue: \"#25B2FF\",\r\n  Green: \"#7AFF87\",\r\n  LightBlue: \"#7AFFEF\",\r\n  Purple: \"#BD7AFF\",\r\n};\r\n\r\nexport const PROBLEM_DIFFICULTY = {\r\n  Easy: \"#7AFF87\",\r\n  Medium: \"#FFAC7D\",\r\n  Hard: \"#FF7A7A\",\r\n};\r\n","import \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { PAGETHEME } from \"../../Constants/colors\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <div className=\"navbar-container\">\r\n        <div className=\"navbar-menu\">\r\n          <IconButton>\r\n            <MenuIcon style={{ color: \"white\", fontSize: \"4rem\" }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"navbar-redirect-section\">\r\n          <div className=\"navbar-link-wrapper\">\r\n            <div className=\"navbar-logo\" style={props.style}>\r\n              カツドン\r\n            </div>\r\n            <div className=\"redirect-links\">\r\n              <Link\r\n                to=\"/welcome\"\r\n                className=\"navbar-redirect-link\"\r\n                style={{ textDecoration: \"none\" }}\r\n                onClick={() => {\r\n                  props.changeTheme(PAGETHEME.Blue);\r\n                }}\r\n              >\r\n                Leaderboard\r\n              </Link>\r\n            </div>\r\n            <div className=\"redirect-links\">\r\n              <Link\r\n                to=\"/users\"\r\n                className=\"navbar-redirect-link\"\r\n                style={{ textDecoration: \"none\" }}\r\n                onClick={() => {\r\n                  props.changeTheme(PAGETHEME.LightBlue);\r\n                }}\r\n              >\r\n                Users\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"redirect-links\">\r\n              <Link\r\n                to=\"/welcome\"\r\n                className=\"navbar-redirect-link\"\r\n                style={{ textDecoration: \"none\" }}\r\n                onClick={() => {\r\n                  props.changeTheme(PAGETHEME.Orange);\r\n                }}\r\n              >\r\n                Leetcode Problems\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <Link\r\n            to=\"/profile\"\r\n            className=\"navbar-redirect-link\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={() => {\r\n              props.changeTheme(PAGETHEME.Purple);\r\n            }}\r\n          >\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"navbar-bottom-padding\"></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\r\nimport \"./styles.css\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nconst classes = {\r\n  icon: {\r\n    fontSize: \"3rem\",\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div className=\"footer-content\">\r\n        <IconButton>\r\n          <GitHubIcon style={classes.icon} />\r\n        </IconButton>\r\n        <IconButton>\r\n          <LinkedInIcon style={classes.icon} />\r\n        </IconButton>\r\n      </div>\r\n      please hire me\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Leetcode.090d606e.png\";","import LeetcodeLogo from \"../../Assets/Leetcode.png\";\r\nimport \"./styles.css\";\r\n\r\nexport default function LandingPage(props) {\r\n  return (\r\n    <div className=\"content-container\">\r\n      <div\r\n        className=\"landingpage-heading\"\r\n        style={props.color ?? { color: \"white\" }}\r\n      >\r\n        <div className=\"landingpage-title\">\r\n          <div>Katsudon </div>\r\n          <img src={LeetcodeLogo} alt=\"leetcode\" className=\"leetcode-logo\" />\r\n          <div>Leaderboard</div>\r\n        </div>\r\n        <div className=\"landingpage-details\">\r\n          <div className=\"landingpage-user-count\"> 10 Registered Users</div>\r\n          <button className=\"landingpage-get-started\"> Get Started</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"content-block\">\r\n        <div>\r\n          <div className=\"section-title\" style={props.style}>\r\n            How it works\r\n          </div>\r\n          <div className=\"section\">\r\n            This website is dependent on the{\" \"}\r\n            <span style={props.style}>カツドン (Katsudon)</span> chrome\r\n            extension.\r\n            <br />\r\n            When you successfully submit a Leetcode problem,{\" \"}\r\n            <span style={props.style}>Katsudon</span> scrapes the details of the\r\n            page's HTML and sends the needed information to the database\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"section-title\" style={props.style}>\r\n            Tech Stack\r\n          </div>\r\n          <div className=\"section\">\r\n            Backend server implemented using Node.js and TypeScript.\r\n            <br />\r\n            Using MongoDB as the noSQL database.\r\n            <br />\r\n            <span style={props.style}>Katsudon</span> chrome extension built\r\n            with JavaScript and small hints of HTML\r\n            <br />\r\n            Frontend built with ReactJS and CSS\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"section-title\" style={props.style}>\r\n            Credits\r\n          </div>\r\n          <div className=\"section\">\r\n            <span style={props.style}>Qasim Wani</span>\r\n            <br />\r\n            This project was greatly motivated by QasimWani's LeetHub chrome\r\n            extension, which auto commits your leetcode solutions to a github\r\n            repository.\r\n            <br />\r\n            Originally, the plan was to scrape user's github repos using\r\n            LeetHub. However, I was getting rate limited and anticipated that\r\n            5,000 requests per hour definity won't be enough, since it costs 1\r\n            per file read. <br />I decided to make my own Leetcode scraping\r\n            extension to send the solution to my database to get around this\r\n            rate limit.\r\n          </div>\r\n          <div style={{ height: \"1rem\" }} />\r\n          <div className=\"section\">\r\n            <span style={props.style}>Kevin Chen</span>\r\n            <br />\r\n            Kevin:\r\n            <li>\"Hey guys should we buy a leetcode premium and share it?\"</li>\r\n            Me:\r\n            <li>\r\n              Sharing an account? It would be kind of weird seeing that a\r\n              problem was solved if I've never even seen it.\r\n            </li>\r\n            <li>\r\n              ...Though that would be a subtle way to tell that someone using\r\n              the account was putting in good work.\r\n            </li>\r\n            <li>\r\n              ...Is there a way to tell which problems our friends have solved?\r\n              It doesn't seem like leetcode has a social platform outside of the\r\n              discuss section.\r\n            </li>\r\n            <li> ...Guess I'll try to make it myself</li>\r\n          </div>\r\n          <div className=\"section\">\r\n            <span style={props.style}>SQL Professor</span>\r\n            <br />\r\n            Me: Hey professor, is there a way for me to create a schema to\r\n            represent a graph of connections without having an having a garbage\r\n            time complexity?\r\n            <br />\r\n            Professor:{\" \"}\r\n            <span style={{ fontSize: \"0.75rem\" }}>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incidid...\r\n            </span>\r\n            TLDR: There's gonna be tradebacks left and right, so choose your\r\n            database wisely.\r\n            <br />\r\n            Me: I don't expect this webpage to blow up, so I guess I'll try\r\n            MongoDB\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Avatar, Tooltip } from \"@mui/material\";\r\nimport { get, reduce } from \"lodash\";\r\nimport \"./styles.css\";\r\n\r\nconst fractionToPercent = (fraction) => {\r\n  return `${fraction * 100}%`;\r\n};\r\n\r\nconst difficultyGenerator = (solved, total, difficulty) => {\r\n  const difficultyTitle = difficulty[0].toUpperCase() + difficulty.slice(1);\r\n  return (\r\n    !!solved && (\r\n      <Tooltip\r\n        title={\r\n          <div style={{ fontSize: \"1rem\" }}>\r\n            {difficultyTitle}: {solved}\r\n          </div>\r\n        }\r\n      >\r\n        <div\r\n          className={`profile-solved-${difficulty}`}\r\n          style={{\r\n            width: fractionToPercent(total ? solved / total : 0),\r\n          }}\r\n        />\r\n      </Tooltip>\r\n    )\r\n  );\r\n};\r\n\r\n/**\r\n * @param {string} username\r\n * @param {string} profile_picture_url\r\n * @param {number} followers\r\n * @param {number} following\r\n * @param {string} biography\r\n * @param {number} easySolved\r\n * @param {number} mediumSolved\r\n * @param {number} hardSolved\r\n * @returns A profile component\r\n */\r\nexport default function UserProfile(props) {\r\n  const { userInfo } = props;\r\n  const {\r\n    username,\r\n    biography,\r\n    followers,\r\n    following,\r\n    profile_picture_url,\r\n    solved,\r\n  } = userInfo;\r\n\r\n  const { Easy, Medium, Hard } = reduce(\r\n    solved,\r\n    (accumulator, problem) => {\r\n      const currDifficulty = get(problem, \"difficulty\");\r\n      accumulator[currDifficulty] += 1;\r\n\r\n      return accumulator;\r\n    },\r\n    { Easy: 0, Medium: 0, Hard: 0 }\r\n  );\r\n  const totalSolved = Easy + Medium + Hard;\r\n  \r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-user-info\">\r\n        <div className=\"profile-top-wrapper\">\r\n          <div className=\"follow-stat\">\r\n            <div className=\"follow-value\">{followers.length}</div>\r\n            <div className=\"follow-text\"> Followers</div>\r\n          </div>\r\n          <div className=\"profile-picture\">\r\n            <Avatar\r\n              src={profile_picture_url}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                border: \"2px solid white\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"follow-stat\">\r\n            <div className=\"follow-value\">{following.length}</div>\r\n            <div className=\"follow-text\"> Following</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-username\">{username}</div>\r\n        <div className=\"profile-biography\">{biography ?? \"\"}</div>\r\n      </div>\r\n      <div className=\"profile-solved-section\">\r\n        <div className=\"profile-solved-count\">Solved: {totalSolved}</div>\r\n        <div className=\"profile-solved-distribution\">\r\n          {difficultyGenerator(Easy, totalSolved, \"easy\")}\r\n          {difficultyGenerator(Medium, totalSolved, \"medium\")}\r\n          {difficultyGenerator(Hard, totalSolved, \"hard\")}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport default async function Api(props) {\r\n  const { method, endpoint, params, headers } = props;\r\n  const request = {\r\n    method: method,\r\n    url: `${process.env.REACT_APP_API_TARGET}${endpoint}`,\r\n    params: params,\r\n    headers: headers,\r\n  };\r\n\r\n  return axios(request).then((res) => res.data);\r\n}\r\n","import Api from \"./Api\";\r\n\r\nasync function getAllUsers() {\r\n  return Api({\r\n    method: \"get\",\r\n    endpoint: \"api/user/all\",\r\n    params: {},\r\n    headers: {},\r\n  });\r\n}\r\n\r\nasync function getUserSolutions(userId) {\r\n  return Api({\r\n    method: \"get\",\r\n    endpoint: `api/solution/${userId}`,\r\n    params: {},\r\n    headers: {},\r\n  });\r\n}\r\n\r\nasync function getUserProfile(username) {\r\n  return Api({\r\n    method: \"get\",\r\n    endpoint: `api/user/${username}`,\r\n    params: {},\r\n    headers: {},\r\n  });\r\n}\r\n\r\nconst UserAPI = {\r\n  getAllUsers,\r\n  getUserSolutions,\r\n  getUserProfile,\r\n};\r\n\r\nexport default UserAPI;\r\n","export default __webpack_public_path__ + \"static/media/C.cac16519.svg\";","export default __webpack_public_path__ + \"static/media/CSharp.885a32ed.svg\";","export default __webpack_public_path__ + \"static/media/C++.157c521f.svg\";","export default __webpack_public_path__ + \"static/media/Java.1a020d6d.svg\";","export default __webpack_public_path__ + \"static/media/JavaScript.f719efab.svg\";","export default __webpack_public_path__ + \"static/media/Python.2abc268f.svg\";","import C from \"../Assets/languages/C.svg\";\r\nimport s from \"../Assets/languages/CSharp.svg\";\r\nimport CPP from \"../Assets/languages/C++.svg\";\r\nimport Java from \"../Assets/languages/Java.svg\";\r\nimport JavaScript from \"../Assets/languages/JavaScript.svg\";\r\nimport Python from \"../Assets/languages/Python.svg\";\r\nimport TypeScript from \"../Assets/languages/TypeScript.svg\";\r\n\r\nexport const LANGUAGE_LOGOS = {\r\n  C: C,\r\n  \"C#\": s,\r\n  \"C++\": CPP,\r\n  JavaScript: JavaScript,\r\n  Java: Java,\r\n  Python: Python,\r\n  Python3: Python,\r\n  TypeScript: TypeScript,\r\n};\r\n\r\nexport const LANGUAGE_COMPILE_MAPPING = {\r\n  C: \"c\",\r\n  \"C#\": \"csharp\",\r\n  \"C++\": \"cpp\",\r\n  JavaScript: \"javascript\",\r\n  Java: \"java\",\r\n  Python: \"python\",\r\n  Python3: \"python\",\r\n  TypeScript: \"typescript\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/TypeScript.65d28611.svg\";","import {\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport FileOpenIcon from \"@mui/icons-material/FileOpen\";\r\nimport { keys, map, omit, without } from \"lodash\";\r\nimport { PROBLEM_DIFFICULTY } from \"../../Constants/colors\";\r\nimport { LANGUAGE_LOGOS } from \"../../Constants/language\";\r\nimport \"./styles.css\";\r\n\r\n/**\r\n * @description\r\n * @param {any} style for header colors\r\n * @param {any} solutions in the form of:\r\n\"1\": {\r\n  \"problem\": {\r\n    \"description\": \"<div><p>Given an array of integers...\",\r\n    \"difficulty\": \"Easy\",\r\n    \"solved_by\": [\r\n      \"6306b34920cf5f80f7d0c20d\"\r\n    ],\r\n    \"tags\": [\r\n      \"Array\",\r\n      \"Hash Table\"\r\n    ],\r\n    \"title\": \"Two Sum\",\r\n    \"url\": \"https://leetcode.com/problems/two-sum/\"\r\n  },\r\n  \"solutions\": {\r\n    \"Java\": {\r\n      \"solution_language\": \"Java\",\r\n      \"solution_code\": \"class Solution {\\n...,\r\n      \"runtime_ms\": 50,\r\n      \"memory_usage_mb\": 42.5,\r\n    },\r\n  }\r\n}\r\n*/\r\n\r\nconst headers = [\"Problem\", \"Language\", \"Solution\", \"Solved At\"];\r\n\r\nexport default function SolutionTable(props) {\r\n  const classes = {\r\n    table: {},\r\n    tableHeader: { ...props.style, fontSize: \"1.5rem\" },\r\n    tableCell: {\r\n      textAlign: \"left\",\r\n      fontSize: \"1.25rem\",\r\n      color: \"white\",\r\n      margin: 0,\r\n      padding: 0,\r\n      paddingInline: \"1rem\",\r\n    },\r\n    fileOpen: { fontSize: \"2rem\", color: \"white\" },\r\n    languageLogo: {\r\n      width: \"2.5rem\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflow: \"auto\" }}>\r\n      <Table className=\"solution-table\">\r\n        <TableHead>\r\n          <TableRow className=\"header\">\r\n            {headers.map((header, idx) => {\r\n              return (\r\n                <TableCell key={idx} style={classes.tableHeader}>\r\n                  {header}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className=\"solution-table-body\">\r\n          {map(\r\n            omit(props.solutions, \"difficulty_distribution\"),\r\n            (details, id) => {\r\n              return (\r\n                <TableRow key={id}>\r\n                  <TableCell\r\n                    style={{\r\n                      ...classes.tableCell,\r\n                      color: PROBLEM_DIFFICULTY[details.problem.difficulty],\r\n                    }}\r\n                  >\r\n                    {id}. {details.problem.title}\r\n                  </TableCell>\r\n                  <TableCell style={classes.tableCell}>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                        gap: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {map(\r\n                        without(keys(details.solutions), \"recent\"),\r\n                        (language, idx) => {\r\n                          return (\r\n                            <img\r\n                              key={idx}\r\n                              src={LANGUAGE_LOGOS[language]}\r\n                              alt={language}\r\n                              style={classes.languageLogo}\r\n                            />\r\n                          );\r\n                        }\r\n                      )}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell style={classes.tableCell}>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        props.handleOpenSolutionModel(\r\n                          details.problem,\r\n                          details.solutions\r\n                        );\r\n                      }}\r\n                    >\r\n                      <FileOpenIcon style={classes.fileOpen} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell style={classes.tableCell}>\r\n                    {details.solutions.recent.substring(0, 10)}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            }\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nexport default function CodeBlock(props) {\r\n  return (\r\n    <SyntaxHighlighter\r\n      language={props.language}\r\n      style={atomDark}\r\n      showLineNumbers\r\n      lineNumberStyle={{ minWidth: 0 }}\r\n      showInlineLineNumbers\r\n    >\r\n      {props.code}\r\n    </SyntaxHighlighter>\r\n  );\r\n}\r\n","import { Tab, Tabs } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\n/**\r\n * @description\r\n * @param {*} tabs contains a list of objects with the following:\r\n * @param {string} label - The tab label\r\n * @param {any} content - The content to render\r\n * @returns A tab group with the provided contents\r\n */\r\nexport default function TabGroup(props) {\r\n  const [tab, setTab] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        variant=\"scrollable\"\r\n        value={tab}\r\n        onChange={(event, newTab) => {\r\n          setTab(newTab);\r\n        }}\r\n        TabIndicatorProps={{\r\n          style: { backgroundColor: props.color ?? \"white\" },\r\n        }}\r\n      >\r\n        {props.tabs.map((content, idx) => {\r\n          return (\r\n            <Tab\r\n              key={idx}\r\n              label={\r\n                <div style={{ fontSize: \"1.5rem\", textTransform: \"none\" }}>\r\n                  {content.label}\r\n                </div>\r\n              }\r\n              style={{\r\n                color: props.color ?? \"white\",\r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n                marginLeft: 0,\r\n                backgroundColor: \"rgba(0,0,0,0.1)\",\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </Tabs>\r\n      <div>{props.tabs[tab].content}</div>\r\n    </>\r\n  );\r\n}\r\n","import { Modal } from \"@mui/material\";\r\nimport { Markup } from \"react-render-markup\";\r\nimport { get, keys, without } from \"lodash\";\r\nimport CodeBlock from \"../Codeblock\";\r\nimport TabGroup from \"../TabGroup\";\r\nimport { LANGUAGE_COMPILE_MAPPING } from \"../../Constants/language\";\r\nimport { PROBLEM_DIFFICULTY } from \"../../Constants/colors\";\r\nimport \"./styles.css\";\r\n\r\nexport default function SolutionModal(props) {\r\n  const { problem, solutions } = props;\r\n  const solutionLanguages = without(keys(solutions), \"recent\");\r\n  const solutionTabs = solutionLanguages.map((language) => {\r\n    const solutionDetails = get(solutions, language);\r\n    const runtime = get(solutionDetails, \"runtime_ms\");\r\n    const memory = get(solutionDetails, \"memory_usage_mb\");\r\n\r\n    return {\r\n      label: language,\r\n      content: (\r\n        <div className=\"solution-code\">\r\n          <div style={{ padding: \"1rem\" }}>\r\n            Runtime: {runtime} ms <br />\r\n            Memory Usage: {memory} MB\r\n          </div>\r\n          <CodeBlock\r\n            code={get(solutions, `${language}.solution_code`)}\r\n            language={LANGUAGE_COMPILE_MAPPING[language]}\r\n          />\r\n        </div>\r\n      ),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"solution-container\">\r\n        <div className=\"problem-block\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href={problem.url}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"leetcode-title\"\r\n              style={{ color: PROBLEM_DIFFICULTY[problem.difficulty] }}\r\n            >\r\n              {problem.id}. {problem.title}\r\n            </a>\r\n            <Markup markup={problem.description} />\r\n          </div>\r\n        </div>\r\n        <div className=\"solution-block\">\r\n          <div className=\"modal-content\">\r\n            <TabGroup\r\n              tabs={solutionTabs}\r\n              color={PROBLEM_DIFFICULTY[problem.difficulty]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import UserProfile from \"../../Components/UserProfile\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport UserAPI from \"../../Api/UserAPI\";\r\nimport SolutionTable from \"../../Components/SolutionTable\";\r\nimport SolutionModal from \"../../Components/SolutionModal\";\r\n\r\nexport default function ProfilePage(props) {\r\n  let params = new URL(document.location).searchParams;\r\n  const username = params.get(\"user\");\r\n\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [solutions, setSolutions] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [solutionDisplay, setSolutionDisplay] = useState(false);\r\n  const [problemBlock, setProblemBlock] = useState({});\r\n  const [solutionsBlock, setSolutionsBlock] = useState({});\r\n\r\n  async function getUserDetails(username) {\r\n    setLoading(true);\r\n    let user_id;\r\n\r\n    await UserAPI.getUserProfile(username)\r\n      .then((res) => {\r\n        setUserInfo(res.user);\r\n        user_id = res.user._id;\r\n      })\r\n      .catch(() => {\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 200);\r\n      });\r\n\r\n    await UserAPI.getUserSolutions(user_id).then((res) => {\r\n      setSolutions(res);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }\r\n\r\n  const handleOpenSolutionModel = (problem, solutions) => {\r\n    setProblemBlock(problem);\r\n    setSolutionsBlock(solutions);\r\n    setSolutionDisplay(true);\r\n  };\r\n\r\n  const handleCloseSolutionModel = () => {\r\n    setProblemBlock({});\r\n    setSolutionsBlock({});\r\n    setSolutionDisplay(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserDetails(username);\r\n  }, [username]);\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      {isLoading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <CircularProgress\r\n            style={{ color: \"#BD7AFF\", width: \"8rem\", height: \"8rem\" }}\r\n          />\r\n        </div>\r\n      )}\r\n      {userInfo && !isLoading && (\r\n        <>\r\n          <div className=\"profile-page-container\">\r\n            <UserProfile userInfo={userInfo} />\r\n            <SolutionTable\r\n              solutions={solutions}\r\n              handleOpenSolutionModel={handleOpenSolutionModel}\r\n              style={{ color: \"#BD7AFF\" }}\r\n            />\r\n            <SolutionModal\r\n              open={solutionDisplay}\r\n              handleClose={handleCloseSolutionModel}\r\n              problem={problemBlock}\r\n              solutions={solutionsBlock}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {!userInfo && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100%\",\r\n            fontSize: \"2rem\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          \"{username}\" is not a valid user\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import SearchIcon from \"@mui/icons-material/Search\";\r\nimport Select from \"react-select\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport \"./styles.css\";\r\n\r\nconst selectStyles = {\r\n  container: (provided, state) => ({\r\n    padding: 0,\r\n    width: \"200px\",\r\n    flexGrow: 1,\r\n  }),\r\n  control: (provided, state) => ({\r\n    borderRadius: 0,\r\n    backgroundColor: \"#3d3d3d\",\r\n  }),\r\n  dropdownIndicator: (provided, state) => ({\r\n    display: \"none\",\r\n  }),\r\n  indicatorsContainer: (provided, state) => ({\r\n    padding: 0,\r\n  }),\r\n  menu: (provided, state) => ({\r\n    borderRadius: 0,\r\n  }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    color: \"white\",\r\n    fontSize: \"1.25rem\",\r\n    backgroundColor: state.isFocused ? \"#444444\" : \"#000000\",\r\n  }),\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    fontSize: \"1.25rem\",\r\n    color: \"white\",\r\n  }),\r\n};\r\n\r\nconst classes = {\r\n  searchIcon: {\r\n    marginTop: \"1px\",\r\n    color: \"white\",\r\n    fontSize: \"2.25rem\",\r\n  },\r\n  nameLabel: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    gap: \"1rem\",\r\n    color: \"white\",\r\n  },\r\n  avatarIcon: {\r\n    width: \"2.5rem\",\r\n    height: \"2.5rem\",\r\n  },\r\n};\r\n\r\n/**\r\n * @description Provides a user search bar given a list of users\r\n * @param {any[]} users - an array of user objects\r\n * @returns A search bar component\r\n */\r\nexport default function UserSearchBar(props) {\r\n  return (\r\n    <div className=\"user-filter-section\">\r\n      <SearchIcon style={classes.searchIcon} />\r\n      <Select\r\n        clearIndicator={true}\r\n        styles={selectStyles}\r\n        value={props.selectedUser}\r\n        onChange={props.setSelectedUser}\r\n        options={props.allUsers}\r\n        formatOptionLabel={(user) => {\r\n          return (\r\n            <div style={classes.nameLabel}>\r\n              <Avatar\r\n                style={classes.avatarIcon}\r\n                src={user.profile_picture_url}\r\n              />\r\n              {user.username}\r\n            </div>\r\n          );\r\n        }}\r\n        placeholder=\"Search for a User...\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { get, pick } from \"lodash\";\r\nimport UserFilter from \"../../Components/Filters/UserSearchBar\";\r\nimport UserProfile from \"../../Components/UserProfile\";\r\nimport UserAPI from \"../../Api/UserAPI\";\r\nimport \"./styles.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Users() {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [currrentUserDetails, setCurrentUserDetails] = useState(null);\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  async function getAllUsers() {\r\n    await UserAPI.getAllUsers().then((res) => {\r\n      const allUsers = res.users.map((userDetails) => {\r\n        return pick(userDetails, [\"username\", \"profile_picture_url\"]);\r\n      });\r\n\r\n      setUsers(allUsers);\r\n    });\r\n  }\r\n\r\n  async function getSelectedUserDetails(selectedUser) {\r\n    const username = get(selectedUser, \"username\");\r\n    await UserAPI.getUserProfile(username).then((res) => {\r\n      setCurrentUserDetails(res.user);\r\n    });\r\n  }\r\n\r\n  // Runs on page load, fetches all users\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    getAllUsers();\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Runs on User Selection, loads user profile card\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    selectedUser && getSelectedUserDetails(selectedUser);\r\n    \r\n    setLoading(false);\r\n  }, [selectedUser]);\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <div className=\"user-page-content-container\">\r\n        <div className=\"user-page-search-container\">\r\n          {!isLoading && (\r\n            <UserFilter\r\n              allUsers={users}\r\n              selectedUser={selectedUser}\r\n              setSelectedUser={setSelectedUser}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"user-page-user-profile-container\">\r\n          {!isLoading && currrentUserDetails && (\r\n            <>\r\n              <UserProfile userInfo={currrentUserDetails} />\r\n              <Link\r\n                to={`/profile?user=${get(selectedUser, \"username\")}`}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Button style={{ color: \"white\", fontSize: \"1.25rem\" }}>\r\n                  View Profile\r\n                </Button>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LeetcodeProblems() {\r\n  return <div className=\"content-container\">Leetcode Problems</div>;\r\n}\r\n","import LandingPage from \"../Views/LandingPage\";\r\nimport Profile from \"../Views/ProfilePage\";\r\nimport Users from \"../Views/Users\";\r\nimport LeetcodeProblems from \"../Views/LeetcodeProblems\";\r\n\r\nexport const routes = [\r\n  { path: \"/welcome\", element: <LandingPage /> },\r\n  { path: \"/profile\", element: <Profile /> },\r\n  { path: \"/users\", element: <Users /> },\r\n  { path: \"/problems\", element: <LeetcodeProblems /> },\r\n];\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Footer from \"./Components/Footer\";\r\nimport { PAGETHEME } from \"./Constants/colors\";\r\nimport { routes } from \"./Constants/routes\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [pageColor, setPageColor] = useState(PAGETHEME.Blue);\r\n\r\n  const COMPONENT_ROUTES = routes.map((component, idx) => {\r\n    return (\r\n      <Route key={idx} path={component.path} element={component.element} />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Navbar style={{ color: pageColor }} changeTheme={setPageColor} />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            paddingBottom: \"100px\",\r\n          }}\r\n        >\r\n          <Routes>{COMPONENT_ROUTES}</Routes>\r\n        </div>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n \nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}