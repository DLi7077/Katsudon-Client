{"version":3,"sources":["Assets/Leetcode.png","Views/LandingPage/index.js","Components/User/UserProfile/index.js","Api/Api.js","Api/UserAPI.js","Constants/colors.js","Assets/languages/C.svg","Assets/languages/CSharp.svg","Assets/languages/C++.svg","Assets/languages/Java.svg","Assets/languages/JavaScript.svg","Assets/languages/Python.svg","Constants/language.js","Assets/languages/TypeScript.svg","Components/SolutionTable/index.js","Components/Codeblock/index.js","Components/TabGroup/index.js","Components/SolutionModal/index.js","Components/User/Skillbox/index.js","Views/ProfilePage/index.js","Utils/getSearchParams.js","Components/Filters/UserSearchBar/index.js","Views/Users/index.js","Views/LeetcodeProblems/index.js","Constants/routes.js","Constants/navbar.js","Components/Navbar/index.js","Components/Footer/index.js","App.js","index.js"],"names":["LandingPage","props","className","style","backgroundColor","color","src","LeetcodeLogo","alt","height","fontSize","difficultyGenerator","solved","total","difficulty","fraction","difficultyTitle","toUpperCase","slice","Tooltip","title","width","UserProfile","userInfo","username","biography","followers","following","profile_picture_url","reduce","accumulator","problem","get","Easy","Medium","Hard","totalSolved","border","borderColor","length","Avatar","Api","method","endpoint","params","headers","request","url","process","axios","then","res","data","dotenv","queryParams","qs","stringify","UserAPI","getAllUsers","getUserSolutions","getUserProfile","PAGETHEME","Orange","background","Blue","Green","LightBlue","Purple","header","section","PROBLEM_DIFFICULTY","LANGUAGE_LOGOS","C","s","CPP","JavaScript","Java","Python","Python3","TypeScript","LANGUAGE_COMPILE_MAPPING","SolutionTable","classes","tableHeader","headerColor","tableCell","textAlign","margin","padding","paddingInline","fileOpen","languageLogo","link","textDecoration","iconButton","arrowIcon","isCurrentSort","sortDir","sortBy","overflow","Table","TableHead","TableRow","TableCell","colSpan","IconButton","onClick","handleSortDirChange","loading","TableBody","map","solutions","details","idx","href","target","rel","id","display","justifyContent","alignItems","keys","language","handleOpenSolutionModel","last_solved_at","substring","CircularProgress","CodeBlock","atomDark","showLineNumbers","lineNumberStyle","minWidth","showInlineLineNumbers","code","TabGroup","useState","tab","setTab","Tabs","variant","value","onChange","event","newTab","TabIndicatorProps","tabs","content","Tab","label","textTransform","paddingTop","paddingBottom","marginLeft","SolutionModal","solutionTabs","without","solutionDetails","runtime","memory","Modal","open","onClose","handleClose","markup","description","SkillBox","tags","orderBy","forEach","tag","frequency","tag_name","ProfilePage","location","useLocation","split","curr","key","getSearchParams","setQueryParams","setUserInfo","setSolutions","isLoading","setLoading","tableLoading","setTableLoading","solutionDisplay","setSolutionDisplay","problemBlock","setProblemBlock","solutionsBlock","setSolutionsBlock","setSortBy","setSortDir","user","catch","setTimeout","directionMapping","useEffect","getUserDetails","getSolutions","rows","queryParam","currDirection","selectStyles","container","provided","state","flexGrow","control","borderRadius","dropdownIndicator","indicatorsContainer","menu","option","isFocused","placeholder","searchIcon","marginTop","nameLabel","gap","avatarIcon","UserSearchBar","clearIndicator","styles","selectedUser","setSelectedUser","options","allUsers","formatOptionLabel","Users","users","setUsers","currrentUserDetails","setCurrentUserDetails","userProfileLoading","setUserProfileLoading","userDetails","pick","user_id","getSelectedUserDetails","to","Button","LeetcodeProblems","routes","path","element","routeColors","MENU_LINKS","Leaderboard","Problems","Navbar","logoColor","setLogoColor","anchorElement","setAnchorElement","MenuItem","pathname","changeTheme","document","onreadystatechange","navbar","querySelector","katsudonLogo","window","addEventListener","e","scrollY","classList","add","remove","currentTarget","Menu","anchorEl","sx","omit","icon","Footer","App","pageTheme","setPageTheme","COMPONENT_ROUTES","component","componentWithColor","cloneElement","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.439bc066.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Leetcode.090d606e.png\";","import LeetcodeLogo from \"../../Assets/Leetcode.png\";\r\nimport \"./styles.css\";\r\n\r\nexport default function LandingPage(props) {\r\n  return (\r\n    <div\r\n      className=\"content-container\"\r\n      style={{ backgroundColor: props.backgroundColor }}\r\n    >\r\n      <div className=\"landingpage-heading\" style={{ color: \"white\" }}>\r\n        <div className=\"landingpage-title\">\r\n          <div>Katsudon </div>\r\n          <img src={LeetcodeLogo} alt=\"leetcode\" className=\"leetcode-logo\" />\r\n          <div>Leaderboard</div>\r\n        </div>\r\n        <div className=\"landingpage-details\">\r\n          <div className=\"landingpage-user-count\"> 10 Registered Users</div>\r\n          <button className=\"landingpage-get-started\"> Get Started</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"content-block\">\r\n        <div>\r\n          <div className=\"section-title\" style={{ color: props.color }}>\r\n            How it works\r\n          </div>\r\n          <div className=\"section\">\r\n            This website is dependent on the{\" \"}\r\n            <span style={{ color: props.color }}>カツドン (Katsudon)</span>{\" \"}\r\n            chrome extension.\r\n            <br />\r\n            When you successfully submit a Leetcode problem,{\" \"}\r\n            <span style={{ color: props.color }}>Katsudon</span> scrapes the\r\n            details of the page's HTML and sends the needed information to the\r\n            database\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"section-title\" style={{ color: props.color }}>\r\n            Tech Stack\r\n          </div>\r\n          <div className=\"section\">\r\n            Backend server implemented using Node.js and TypeScript.\r\n            <br />\r\n            Using MongoDB as the noSQL database.\r\n            <br />\r\n            <span style={{ color: props.color }}>Katsudon</span> chrome\r\n            extension built with JavaScript and small hints of HTML\r\n            <br />\r\n            Frontend built with ReactJS and CSS\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"section-title\" style={{ color: props.color }}>\r\n            Credits\r\n          </div>\r\n          <div className=\"section\">\r\n            <span style={{ color: props.color }}>Qasim Wani</span>\r\n            <br />\r\n            This project was greatly motivated by QasimWani's LeetHub chrome\r\n            extension, which auto commits your leetcode solutions to a github\r\n            repository.\r\n            <br />\r\n            Originally, the plan was to scrape user's github repos using\r\n            LeetHub. However, I was getting rate limited and anticipated that\r\n            5,000 requests per hour definity won't be enough, since it costs 1\r\n            per file read. <br />I decided to make my own Leetcode scraping\r\n            extension to send the solution to my database to get around this\r\n            rate limit.\r\n          </div>\r\n          <div style={{ height: \"1rem\" }} />\r\n          <div className=\"section\">\r\n            <span style={{ color: props.color }}>Kevin Chen</span>\r\n            <br />\r\n            Kevin:\r\n            <li>\"Hey guys should we buy a leetcode premium and share it?\"</li>\r\n            Me:\r\n            <li>\r\n              Sharing an account? It would be kind of weird seeing that a\r\n              problem was solved if I've never even seen it.\r\n            </li>\r\n            <li>\r\n              ...Though that would be a subtle way to tell that someone using\r\n              the account was putting in good work.\r\n            </li>\r\n            <li>\r\n              ...Is there a way to tell which problems our friends have solved?\r\n              It doesn't seem like leetcode has a social platform outside of the\r\n              discuss section.\r\n            </li>\r\n            <li> ...Guess I'll try to make it myself</li>\r\n          </div>\r\n          <div className=\"section\">\r\n            <span style={{ color: props.color }}>SQL Professor</span>\r\n            <br />\r\n            Me: Hey professor, is there a way for me to create a schema to\r\n            represent a graph of connections without having an having a garbage\r\n            time complexity?\r\n            <br />\r\n            Professor:{\" \"}\r\n            <span style={{ fontSize: \"0.75rem\" }}>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incidid...\r\n            </span>\r\n            TLDR: There's gonna be tradebacks left and right, so choose your\r\n            database wisely.\r\n            <br />\r\n            Me: I don't expect this webpage to blow up, so I guess I'll try\r\n            MongoDB\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Avatar, Tooltip } from \"@mui/material\";\r\nimport { get, reduce } from \"lodash\";\r\nimport \"./styles.css\";\r\n\r\nconst fractionToPercent = (fraction) => {\r\n  return `${fraction * 100}%`;\r\n};\r\n\r\nconst difficultyGenerator = (solved, total, difficulty) => {\r\n  const difficultyTitle = difficulty[0].toUpperCase() + difficulty.slice(1);\r\n  return (\r\n    !!solved && (\r\n      <Tooltip\r\n        title={\r\n          <div style={{ fontSize: \"1rem\" }}>\r\n            {difficultyTitle}: {solved}\r\n          </div>\r\n        }\r\n      >\r\n        <div\r\n          className={`profile-solved-${difficulty}`}\r\n          style={{\r\n            width: fractionToPercent(total ? solved / total : 0),\r\n          }}\r\n        />\r\n      </Tooltip>\r\n    )\r\n  );\r\n};\r\n\r\n/**\r\n * @param {string} username\r\n * @param {string} profile_picture_url\r\n * @param {number} followers\r\n * @param {number} following\r\n * @param {string} biography\r\n * @param {number} easySolved\r\n * @param {number} mediumSolved\r\n * @param {number} hardSolved\r\n * @returns A profile component\r\n */\r\nexport default function UserProfile(props) {\r\n  const { userInfo } = props;\r\n  const {\r\n    username,\r\n    biography,\r\n    followers,\r\n    following,\r\n    profile_picture_url,\r\n    solved,\r\n  } = userInfo;\r\n\r\n  const { Easy, Medium, Hard } = reduce(\r\n    solved,\r\n    (accumulator, problem) => {\r\n      const currDifficulty = get(problem, \"difficulty\");\r\n      accumulator[currDifficulty] += 1;\r\n\r\n      return accumulator;\r\n    },\r\n    { Easy: 0, Medium: 0, Hard: 0 }\r\n  );\r\n  const totalSolved = Easy + Medium + Hard;\r\n\r\n  return (\r\n    <div\r\n      className=\"profile-container\"\r\n      style={{ border: `2px solid ${props.borderColor ?? \"white\"}` }}\r\n    >\r\n      <div className=\"profile-user-info\">\r\n        <div className=\"profile-top-wrapper\">\r\n          <div className=\"follow-stat\">\r\n            <div className=\"follow-value\">{followers.length}</div>\r\n            <div className=\"follow-text\"> Followers</div>\r\n          </div>\r\n          <div className=\"profile-picture\">\r\n            <Avatar\r\n              src={profile_picture_url}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                border: \"2px solid white\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"follow-stat\">\r\n            <div className=\"follow-value\">{following.length}</div>\r\n            <div className=\"follow-text\"> Following</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-username\">{username}</div>\r\n        <div className=\"profile-biography\">{biography ?? \"\"}</div>\r\n      </div>\r\n      <div className=\"profile-solved-section\">\r\n        <div className=\"profile-solved-count\">Solved: {totalSolved}</div>\r\n        <div className=\"profile-solved-distribution\">\r\n          {difficultyGenerator(Easy, totalSolved, \"easy\")}\r\n          {difficultyGenerator(Medium, totalSolved, \"medium\")}\r\n          {difficultyGenerator(Hard, totalSolved, \"hard\")}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport default async function Api(props) {\r\n  const { method, endpoint, params, headers } = props;\r\n  const request = {\r\n    method: method,\r\n    url: `${process.env.REACT_APP_API_TARGET}${endpoint}`,\r\n    params: params,\r\n    headers: headers,\r\n  };\r\n\r\n  return axios(request).then((res) => res.data);\r\n}\r\n","import Api from \"./Api\";\r\nimport qs from 'qs'\r\n\r\nasync function getAllUsers() {\r\n  return Api({\r\n    method: \"get\",\r\n    endpoint: \"api/user/all\",\r\n    params: {},\r\n    headers: {},\r\n  });\r\n}\r\n\r\nasync function getUserSolutions(queryParams) {\r\n  return Api({\r\n    method: \"get\",\r\n    endpoint: `api/solution/all?${qs.stringify(queryParams)}`,\r\n    params: {},\r\n    headers: {},\r\n  });\r\n}\r\n\r\nasync function getUserProfile(queryParams) {\r\n  return Api({\r\n    method: \"get\",\r\n    endpoint: `api/user/profile?${qs.stringify(queryParams)}`,\r\n    params: {},\r\n    headers: {},\r\n  });\r\n}\r\n\r\nconst UserAPI = {\r\n  getAllUsers,\r\n  getUserSolutions,\r\n  getUserProfile,\r\n};\r\n\r\nexport default UserAPI;\r\n","export const PAGETHEME = {\r\n  Orange: { color: \"#FFAA7A\", background: \"#2A2522\" },\r\n  Blue: { color: \"#25B2FF\", background: \"#22242A\" },\r\n  Green: { color: \"#7AFF87\", background: \"#7AFF87\" },\r\n  LightBlue: { color: \"#7AFFEF\", background: \"#22292A\" },\r\n  Purple: {\r\n    color: \"#AC39AC\",\r\n    background: \"#2A2229\",\r\n    header: \"#2E1F2C\",\r\n    section: \"#382E37\",\r\n  },\r\n};\r\n\r\nexport const PROBLEM_DIFFICULTY = {\r\n  Easy: \"#7AFF87\",\r\n  Medium: \"#FFAC7D\",\r\n  Hard: \"#FF7A7A\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/C.cac16519.svg\";","export default __webpack_public_path__ + \"static/media/CSharp.885a32ed.svg\";","export default __webpack_public_path__ + \"static/media/C++.157c521f.svg\";","export default __webpack_public_path__ + \"static/media/Java.1a020d6d.svg\";","export default __webpack_public_path__ + \"static/media/JavaScript.f719efab.svg\";","export default __webpack_public_path__ + \"static/media/Python.2abc268f.svg\";","import C from \"../Assets/languages/C.svg\";\r\nimport s from \"../Assets/languages/CSharp.svg\";\r\nimport CPP from \"../Assets/languages/C++.svg\";\r\nimport Java from \"../Assets/languages/Java.svg\";\r\nimport JavaScript from \"../Assets/languages/JavaScript.svg\";\r\nimport Python from \"../Assets/languages/Python.svg\";\r\nimport TypeScript from \"../Assets/languages/TypeScript.svg\";\r\n\r\nexport const LANGUAGE_LOGOS = {\r\n  C: C,\r\n  \"C#\": s,\r\n  \"C++\": CPP,\r\n  JavaScript: JavaScript,\r\n  Java: Java,\r\n  Python: Python,\r\n  Python3: Python,\r\n  TypeScript: TypeScript,\r\n};\r\n\r\nexport const LANGUAGE_COMPILE_MAPPING = {\r\n  C: \"c\",\r\n  \"C#\": \"csharp\",\r\n  \"C++\": \"cpp\",\r\n  JavaScript: \"javascript\",\r\n  Java: \"java\",\r\n  Python: \"python\",\r\n  Python3: \"python\",\r\n  TypeScript: \"typescript\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/TypeScript.65d28611.svg\";","import {\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport FileOpenIcon from \"@mui/icons-material/FileOpen\";\r\nimport { keys, map } from \"lodash\";\r\nimport { PROBLEM_DIFFICULTY } from \"../../Constants/colors\";\r\nimport { LANGUAGE_LOGOS } from \"../../Constants/language\";\r\nimport \"./styles.css\";\r\n\r\n/**\r\n * @description\r\n * @param {any} style for header colors\r\n * @param {any} solutions in the form of:\r\n{\r\nlast_solved_at: \"2022-08-26T01:41:38.431Z\"\r\nproblem: {\r\n  _id: '6306cfc384eb7e22c4b0b834',\r\n  id: 1, \r\n  description: ...,\r\n  difficulty: 'Easy',\r\n  solved_by: []\r\n  tags: ['Array', 'Hash Table']\r\n  title: \"Two Sum\"\r\n  url: \"https://leetcode.com/problems/two-sum/\"\r\n}\r\nsolutions:{\r\n  C#:{\r\n    created_at: \"2022-08-26T01:41:38.431Z\"\r\n    memory_usage_mb: 44.2\r\n    problem_id: \"6306cfc384eb7e22c4b0b834\"\r\n    runtime_ms: 157\r\n    solution_code: \"public class Solution \\n{\\n    public int[] TwoSum(int[] nums, int target) \\n    {\\n        var idx = new Dictionary<int, int>();\\n        \\n        for (int i = 0; i < nums.Length; ++i)\\n            if (!idx.ContainsKey(target - nums[i]))\\n                idx[nums[i]] = i;\\n            else\\n                return new [] {idx[target - nums[i]], i};\\n        \\n        return new int[0];\\n    }\\n}\"\r\n    solution_language: \"C#\"\r\n    user_id: \"63081fe50cc2604b938631e1\"\r\n  }\r\n}\r\n*/\r\nexport default function SolutionTable(props) {\r\n  const classes = {\r\n    tableHeader: {\r\n      color: props.headerColor,\r\n      fontSize: \"1.4rem\",\r\n    },\r\n    tableCell: {\r\n      textAlign: \"left\",\r\n      fontSize: \"1.15rem\",\r\n      color: \"white\",\r\n      margin: 0,\r\n      padding: 0,\r\n      paddingInline: \"1rem\",\r\n    },\r\n    fileOpen: { fontSize: \"2rem\", color: \"white\" },\r\n    languageLogo: {\r\n      width: \"2.5rem\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n    },\r\n    iconButton: {\r\n      color: \"white\",\r\n      padding: 0,\r\n    },\r\n    arrowIcon: {\r\n      color: \"white\",\r\n      fontSize: \"2rem\",\r\n    },\r\n  };\r\n\r\n  const isCurrentSort = (sortDir) => {\r\n    return props.sortBy === sortDir && props.sortDir !== 0;\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflow: \"auto\", width: 'min(800px, 100vw)' }}>\r\n      <Table className=\"solution-table\">\r\n        <TableHead>\r\n          <TableRow className=\"header\">\r\n            <TableCell style={classes.tableHeader} colSpan={3}>\r\n              Problem\r\n              <IconButton\r\n                style={classes.iconButton}\r\n                onClick={() => {\r\n                  props.handleSortDirChange(\"problem_id\");\r\n                }}\r\n              >\r\n                {isCurrentSort(\"problem_id\") && props.sortDir === 1 && (\r\n                  <KeyboardArrowUpIcon style={classes.arrowIcon} />\r\n                )}\r\n                {isCurrentSort(\"problem_id\") && props.sortDir === 2 && (\r\n                  <KeyboardArrowDownIcon style={classes.arrowIcon} />\r\n                )}\r\n                {!isCurrentSort(\"problem_id\") && (\r\n                  <HorizontalRuleIcon style={classes.arrowIcon} />\r\n                )}\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell style={classes.tableHeader}>Language</TableCell>\r\n            <TableCell style={classes.tableHeader}>Solution</TableCell>\r\n            <TableCell style={classes.tableHeader}>\r\n              Solved At\r\n              <IconButton\r\n                style={classes.iconButton}\r\n                onClick={() => {\r\n                  props.handleSortDirChange(\"last_solved_at\");\r\n                }}\r\n              >\r\n                {isCurrentSort(\"last_solved_at\") && props.sortDir === 1 && (\r\n                  <KeyboardArrowUpIcon style={classes.arrowIcon} />\r\n                )}\r\n                {isCurrentSort(\"last_solved_at\") && props.sortDir === 2 && (\r\n                  <KeyboardArrowDownIcon style={classes.arrowIcon} />\r\n                )}\r\n                {!isCurrentSort(\"last_solved_at\") && (\r\n                  <HorizontalRuleIcon style={classes.arrowIcon} />\r\n                )}\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        {!props.loading && (\r\n          <TableBody\r\n            className=\"solution-table-body\"\r\n            style={{ backgroundColor: props.backgroundColor }}\r\n          >\r\n            {map(props.solutions, (details, idx) => {\r\n              return (\r\n                <TableRow key={idx}>\r\n                  <TableCell\r\n                    style={{\r\n                      ...classes.tableCell,\r\n                    }}\r\n                    colSpan={3}\r\n                  >\r\n                    <a\r\n                      href={details.problem.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      style={{\r\n                        color: PROBLEM_DIFFICULTY[details.problem.difficulty],\r\n                        ...classes.link,\r\n                      }}\r\n                    >\r\n                      {details.problem.id}. {details.problem.title}\r\n                    </a>\r\n                  </TableCell>\r\n                  <TableCell style={classes.tableCell}>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {map(keys(details.solutions), (language, idx) => {\r\n                        return (\r\n                          <img\r\n                            key={idx}\r\n                            src={LANGUAGE_LOGOS[language]}\r\n                            alt={language}\r\n                            style={classes.languageLogo}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell style={classes.tableCell}>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        props.handleOpenSolutionModel(\r\n                          details.problem,\r\n                          details.solutions\r\n                        );\r\n                      }}\r\n                    >\r\n                      <FileOpenIcon style={classes.fileOpen} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell style={classes.tableCell}>\r\n                    {details.last_solved_at.substring(0, 10)}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        )}\r\n        {props.loading && (\r\n          <TableBody>\r\n            <TableRow></TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={6}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <CircularProgress\r\n                    style={{\r\n                      color: \"white\",\r\n                      width: \"3rem\",\r\n                      height: \"3rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        )}\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nexport default function CodeBlock(props) {\r\n  return (\r\n    <SyntaxHighlighter\r\n      language={props.language}\r\n      style={atomDark}\r\n      showLineNumbers\r\n      lineNumberStyle={{ minWidth: 0 }}\r\n      showInlineLineNumbers\r\n    >\r\n      {props.code}\r\n    </SyntaxHighlighter>\r\n  );\r\n}\r\n","import { Tab, Tabs } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\n/**\r\n * @description\r\n * @param {*} tabs contains a list of objects with the following:\r\n * @param {string} label - The tab label\r\n * @param {any} content - The content to render\r\n * @returns A tab group with the provided contents\r\n */\r\nexport default function TabGroup(props) {\r\n  const [tab, setTab] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        variant=\"scrollable\"\r\n        value={tab}\r\n        onChange={(event, newTab) => {\r\n          setTab(newTab);\r\n        }}\r\n        TabIndicatorProps={{\r\n          style: { backgroundColor: props.color ?? \"white\" },\r\n        }}\r\n      >\r\n        {props.tabs.map((content, idx) => {\r\n          return (\r\n            <Tab\r\n              key={idx}\r\n              label={\r\n                <div style={{ fontSize: \"1.5rem\", textTransform: \"none\" }}>\r\n                  {content.label}\r\n                </div>\r\n              }\r\n              style={{\r\n                color: props.color ?? \"white\",\r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n                marginLeft: 0,\r\n                backgroundColor: \"rgba(0,0,0,0.1)\",\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </Tabs>\r\n      <div>{props.tabs[tab].content}</div>\r\n    </>\r\n  );\r\n}\r\n","import { Modal } from \"@mui/material\";\r\nimport { Markup } from \"react-render-markup\";\r\nimport { get, keys, without } from \"lodash\";\r\nimport CodeBlock from \"../Codeblock\";\r\nimport TabGroup from \"../TabGroup\";\r\nimport { LANGUAGE_COMPILE_MAPPING } from \"../../Constants/language\";\r\nimport { PROBLEM_DIFFICULTY } from \"../../Constants/colors\";\r\nimport \"./styles.css\";\r\n\r\nexport default function SolutionModal(props) {\r\n  const { problem, solutions } = props;\r\n  const solutionLanguages = without(keys(solutions), \"recent\");\r\n  const solutionTabs = solutionLanguages.map((language) => {\r\n    const solutionDetails = get(solutions, language);\r\n    const runtime = get(solutionDetails, \"runtime_ms\");\r\n    const memory = get(solutionDetails, \"memory_usage_mb\");\r\n\r\n    return {\r\n      label: language,\r\n      content: (\r\n        <div className=\"solution-code\">\r\n          <div style={{ padding: \"1rem\" }}>\r\n            Runtime: {runtime} ms <br />\r\n            Memory Usage: {memory} MB\r\n          </div>\r\n          <CodeBlock\r\n            code={get(solutions, `${language}.solution_code`)}\r\n            language={LANGUAGE_COMPILE_MAPPING[language]}\r\n          />\r\n        </div>\r\n      ),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"solution-container\">\r\n        <div className=\"problem-block\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href={problem.url}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"leetcode-title\"\r\n              style={{ color: PROBLEM_DIFFICULTY[problem.difficulty] }}\r\n            >\r\n              {problem.id}. {problem.title}\r\n            </a>\r\n            <Markup markup={problem.description} />\r\n          </div>\r\n        </div>\r\n        <div className=\"solution-block\">\r\n          <div className=\"modal-content\">\r\n            <TabGroup\r\n              tabs={solutionTabs}\r\n              color={PROBLEM_DIFFICULTY[problem.difficulty]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { get, map, orderBy, reduce } from \"lodash\";\r\nimport \"./styles.css\";\r\nimport \"../user.css\";\r\n\r\nexport default function SkillBox(props) {\r\n  const tags = orderBy(\r\n    map(\r\n      reduce(\r\n        props.solved,\r\n        (accumulator, problem) => {\r\n          const problemTags = get(problem, \"tags\");\r\n          problemTags.forEach((tag) => {\r\n            accumulator[tag] = 1 + (accumulator[tag] || 0);\r\n          });\r\n\r\n          return accumulator;\r\n        },\r\n        {}\r\n      ),\r\n      (frequency, tag_name) => {\r\n        return { tag: tag_name, frequency: frequency };\r\n      }\r\n    ),\r\n    [\"frequency\", \"tag\"],\r\n    [\"desc\", \"asc\"]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-page-section-header\"> Skills</div>\r\n      <div\r\n        className=\"user-page-section-content\"\r\n        style={{ backgroundColor: props.backgroundColor ?? \"#382E37\" }}\r\n      >\r\n        <div className=\"skill-tag-container\">\r\n          {map(tags, (tag, idx) => {\r\n            return (\r\n              <div key={idx} className=\"skill-tag\">\r\n                {tag.tag}: {tag.frequency}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport UserProfile from \"../../Components/User/UserProfile\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport getSearchParams from \"../../Utils/getSearchParams\";\r\nimport UserAPI from \"../../Api/UserAPI\";\r\nimport SolutionTable from \"../../Components/SolutionTable\";\r\nimport SolutionModal from \"../../Components/SolutionModal\";\r\nimport \"./styles.css\";\r\nimport SkillBox from \"../../Components/User/Skillbox\";\r\n\r\nexport default function ProfilePage(props) {\r\n  const location = useLocation();\r\n  const [queryParams, setQueryParams] = useState(getSearchParams(location));\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [solutions, setSolutions] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [tableLoading, setTableLoading] = useState(true);\r\n  const [solutionDisplay, setSolutionDisplay] = useState(false);\r\n  const [problemBlock, setProblemBlock] = useState({});\r\n  const [solutionsBlock, setSolutionsBlock] = useState({});\r\n  const [sortBy, setSortBy] = useState(\"problem_id\");\r\n  const [sortDir, setSortDir] = useState(0);\r\n\r\n  async function getUserDetails() {\r\n    setLoading(true);\r\n    await UserAPI.getUserProfile(queryParams)\r\n      .then((res) => {\r\n        setUserInfo(res.user);\r\n      })\r\n      .catch(() => {\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 200);\r\n      });\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }\r\n\r\n  async function getSolutions() {\r\n    setTableLoading(true);\r\n    await UserAPI.getUserSolutions(queryParams).then((res) => {\r\n      setSolutions(res);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setTableLoading(false);\r\n    }, 500);\r\n  }\r\n\r\n  function addFilter(queryParam) {\r\n    setQueryParams({\r\n      ...queryParams,\r\n      ...queryParam,\r\n    });\r\n  }\r\n\r\n  const directionMapping = {\r\n    0: null,\r\n    1: \"desc\",\r\n    2: \"asc\",\r\n  };\r\n\r\n  const handleSortDirChange = (sortBy) => {\r\n    const currDirection = (sortDir + 1) % 3;\r\n    addFilter({\r\n      sortBy: sortBy,\r\n      sortDir: directionMapping[currDirection],\r\n    });\r\n    setSortBy(sortBy);\r\n    setSortDir(currDirection);\r\n  };\r\n\r\n  const handleOpenSolutionModel = (problem, solutions) => {\r\n    setProblemBlock(problem);\r\n    setSolutionsBlock(solutions);\r\n    setSolutionDisplay(true);\r\n  };\r\n\r\n  const handleCloseSolutionModel = () => {\r\n    setProblemBlock({});\r\n    setSolutionsBlock({});\r\n    setSolutionDisplay(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getSolutions();\r\n  }, [queryParams]);\r\n\r\n  return (\r\n    <div\r\n      className=\"content-container\"\r\n      style={{ backgroundColor: props.backgroundColor }}\r\n    >\r\n      {isLoading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <CircularProgress\r\n            style={{ color: props.color, width: \"8rem\", height: \"8rem\" }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {userInfo && !isLoading && (\r\n        <>\r\n          <div className=\"profile-page-container\">\r\n            <div className=\"user-profile-wrapper\">\r\n              <UserProfile userInfo={userInfo} borderColor=\"#FF66EB\" />\r\n              <SkillBox solved={userInfo.solved} />\r\n            </div>\r\n            <div>\r\n              <SolutionTable\r\n                solutions={solutions.rows}\r\n                handleOpenSolutionModel={handleOpenSolutionModel}\r\n                headerColor={props.color}\r\n                backgroundColor={\"#382E37\"}\r\n                handleSortDirChange={handleSortDirChange}\r\n                loading={tableLoading}\r\n                sortBy={sortBy}\r\n                sortDir={sortDir}\r\n              />\r\n            </div>\r\n            <SolutionModal\r\n              open={solutionDisplay}\r\n              handleClose={handleCloseSolutionModel}\r\n              problem={problemBlock}\r\n              solutions={solutionsBlock}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {!userInfo && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100%\",\r\n            fontSize: \"2rem\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          \"{\"sdfsf\"}\" is not a valid user\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { get, reduce } from \"lodash\";\r\n\r\n/**\r\n * @description Provides the search params given an -useLocation- search\r\n * @param {any} location - value of useLocation() in component\r\n * @returns {any} queryParams Object\r\n */\r\nexport default function getSearchParams(location) {\r\n  const params = get(location, \"search\").substring(1);\r\n  const queryParams = reduce(\r\n    params.split(\"&\"),\r\n    (accumulator, curr) => {\r\n      if (!curr) return accumulator;\r\n      const [key, value] = curr.split(\"=\");\r\n      accumulator[key] = value;\r\n\r\n      return accumulator;\r\n    },\r\n    {}\r\n  );\r\n\r\n  return queryParams;\r\n}\r\n","import SearchIcon from \"@mui/icons-material/Search\";\r\nimport Select from \"react-select\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport \"./styles.css\";\r\n\r\nconst selectStyles = {\r\n  container: (provided, state) => ({\r\n    padding: 0,\r\n    width: \"200px\",\r\n    flexGrow: 1,\r\n  }),\r\n  control: (provided, state) => ({\r\n    borderRadius: 0,\r\n    backgroundColor: \"#3d3d3d\",\r\n  }),\r\n  dropdownIndicator: (provided, state) => ({\r\n    display: \"none\",\r\n  }),\r\n  indicatorsContainer: (provided, state) => ({\r\n    padding: 0,\r\n  }),\r\n  menu: (provided, state) => ({\r\n    borderRadius: 0,\r\n  }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    color: \"white\",\r\n    fontSize: \"1.25rem\",\r\n    backgroundColor: state.isFocused ? \"#444444\" : \"#000000\",\r\n  }),\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    fontSize: \"1.25rem\",\r\n    color: \"white\",\r\n  }),\r\n};\r\n\r\nconst classes = {\r\n  searchIcon: {\r\n    marginTop: \"1px\",\r\n    color: \"white\",\r\n    fontSize: \"2.25rem\",\r\n  },\r\n  nameLabel: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    gap: \"1rem\",\r\n    color: \"white\",\r\n  },\r\n  avatarIcon: {\r\n    width: \"2.5rem\",\r\n    height: \"2.5rem\",\r\n  },\r\n};\r\n\r\n/**\r\n * @description Provides a user search bar given a list of users\r\n * @param {any[]} users - an array of user objects\r\n * @returns A search bar component\r\n */\r\nexport default function UserSearchBar(props) {\r\n  return (\r\n    <div className=\"user-filter-section\">\r\n      <SearchIcon style={classes.searchIcon} />\r\n      <Select\r\n        clearIndicator={true}\r\n        styles={selectStyles}\r\n        value={props.selectedUser}\r\n        onChange={props.setSelectedUser}\r\n        options={props.allUsers}\r\n        formatOptionLabel={(user) => {\r\n          return (\r\n            <div style={classes.nameLabel}>\r\n              <Avatar\r\n                style={classes.avatarIcon}\r\n                src={user.profile_picture_url}\r\n              />\r\n              {user.username}\r\n            </div>\r\n          );\r\n        }}\r\n        placeholder=\"Search for a User...\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { get, pick } from \"lodash\";\r\nimport UserFilter from \"../../Components/Filters/UserSearchBar\";\r\nimport UserProfile from \"../../Components/User/UserProfile\";\r\nimport UserAPI from \"../../Api/UserAPI\";\r\nimport \"./styles.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Users(props) {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [currrentUserDetails, setCurrentUserDetails] = useState(null);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [userProfileLoading, setUserProfileLoading] = useState(false);\r\n\r\n  async function getAllUsers() {\r\n    await UserAPI.getAllUsers().then((res) => {\r\n      const allUsers = res.users.map((userDetails) => {\r\n        return pick(userDetails, ['_id', \"username\", \"profile_picture_url\"]);\r\n      });\r\n\r\n      setUsers(allUsers);\r\n    });\r\n  }\r\n\r\n  async function getSelectedUserDetails(user_id) {\r\n    await UserAPI.getUserProfile(user_id).then((res) => {\r\n      setCurrentUserDetails(res.user);\r\n    });\r\n  }\r\n\r\n  // Runs on page load, fetches all users\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    getAllUsers();\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  // Runs on User Selection, loads user profile card\r\n  useEffect(() => {\r\n    setUserProfileLoading(true);\r\n    selectedUser && getSelectedUserDetails(selectedUser);\r\n    setTimeout(() => {\r\n      setUserProfileLoading(false);\r\n    }, 500);\r\n  }, [selectedUser]);\r\n\r\n  return (\r\n    <div\r\n      className=\"content-container\"\r\n      style={{ backgroundColor: props.backgroundColor }}\r\n    >\r\n      {isLoading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <CircularProgress\r\n            style={{ color: props.color, width: \"8rem\", height: \"8rem\" }}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"user-page-content-container\">\r\n        <div className=\"user-page-search-container\">\r\n          {!isLoading && (\r\n            <UserFilter\r\n              allUsers={users}\r\n              selectedUser={selectedUser}\r\n              setSelectedUser={setSelectedUser}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"user-page-user-profile-container\">\r\n          {userProfileLoading && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <CircularProgress\r\n                style={{ color: props.color, width: \"4rem\", height: \"4rem\" }}\r\n              />\r\n            </div>\r\n          )}\r\n          {!userProfileLoading && currrentUserDetails && (\r\n            <>\r\n              <UserProfile userInfo={currrentUserDetails} />\r\n              <Link\r\n                to={`/profile?user_id=${get(selectedUser, \"_id\")}`}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Button style={{ color: \"white\", fontSize: \"1.25rem\" }}>\r\n                  View Profile\r\n                </Button>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LeetcodeProblems(props) {\r\n  return (\r\n    <div\r\n      className=\"content-container\"\r\n      style={{ backgroundColor: props.backgroundColor }}\r\n    >\r\n      Leetcode Problems\r\n    </div>\r\n  );\r\n}\r\n","import LandingPage from \"../Views/LandingPage\";\r\nimport Profile from \"../Views/ProfilePage\";\r\nimport Users from \"../Views/Users\";\r\nimport LeetcodeProblems from \"../Views/LeetcodeProblems\";\r\nimport { PAGETHEME } from \"./colors\";\r\n\r\nexport const routes = [\r\n  { path: \"/welcome\", element: <LandingPage /> },\r\n  { path: \"/profile\", element: <Profile /> },\r\n  { path: \"/users\", element: <Users /> },\r\n  { path: \"/problems\", element: <LeetcodeProblems /> },\r\n];\r\n\r\nexport const routeColors = {\r\n  \"/welcome\": PAGETHEME.Blue,\r\n  \"/profile\": PAGETHEME.Purple,\r\n  \"/users\": PAGETHEME.LightBlue,\r\n  \"/problems\": PAGETHEME.Orange,\r\n};\r\n","export const MENU_LINKS = {\r\n  \"Sign In\": \"/profile\",\r\n  Leaderboard: \"/welcome\",\r\n  Users: \"/users\",\r\n  Problems: \"/problems\",\r\n};\r\n","import { get, map, omit } from \"lodash\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { IconButton, Menu, MenuItem } from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { routeColors } from \"../../Constants/routes\";\r\nimport { MENU_LINKS } from \"../../Constants/navbar\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Navbar(props) {\r\n  const location = useLocation();\r\n  const [logoColor, setLogoColor] = useState(null);\r\n  const [anchorElement, setAnchorElement] = useState(null);\r\n\r\n  const classes = {\r\n    MenuItem: {\r\n      fontSize: \"1.5rem\",\r\n      \"&:hover\": {\r\n        color: logoColor ?? \"white\",\r\n      },\r\n    },\r\n    link: { textDecoration: \"none\", color: \"white\" },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { pathname } = location;\r\n    setLogoColor(get(routeColors, `${pathname}.color`));\r\n    props.changeTheme(get(routeColors, pathname));\r\n  }, [location, props]);\r\n\r\n  //navbar transition on scroll\r\n  document.onreadystatechange = function () {\r\n    let lastScrollPosition = 0;\r\n    const navbar = document.querySelector(\".navbar-container\");\r\n    const katsudonLogo = document.querySelector(\".katsudon-logo\");\r\n    window.addEventListener(\"scroll\", function (e) {\r\n      lastScrollPosition = window.scrollY;\r\n\r\n      if (lastScrollPosition >= 20) {\r\n        navbar.classList.add(\"navbar-container-condensed\");\r\n        katsudonLogo.classList.add(\"katsudon-logo-condensed\");\r\n      } else {\r\n        navbar.classList.remove(\"navbar-container-condensed\");\r\n        katsudonLogo.classList.remove(\"katsudon-logo-condensed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar-container\">\r\n        <div className=\"navbar-menu\">\r\n          <IconButton\r\n            onClick={(e) => {\r\n              setAnchorElement(e.currentTarget);\r\n            }}\r\n          >\r\n            <MenuIcon style={{ color: \"white\", fontSize: \"4rem\" }} />\r\n          </IconButton>\r\n          <Menu\r\n            style={{ marginLeft: \"-1.5rem\" }}\r\n            anchorEl={anchorElement}\r\n            open={!!anchorElement}\r\n            onClose={() => setAnchorElement(null)}\r\n          >\r\n            {map(MENU_LINKS, (path, label) => {\r\n              return (\r\n                <Link key={label} to={path} style={classes.link}>\r\n                  <MenuItem sx={classes.MenuItem}>{label}</MenuItem>\r\n                </Link>\r\n              );\r\n            })}\r\n          </Menu>\r\n        </div>\r\n        <div className=\"navbar-redirect-section\">\r\n          <div className=\"navbar-link-wrapper\">\r\n            <div className=\"katsudon-logo\" style={{ color: logoColor }}>\r\n              カツドン\r\n            </div>\r\n            {map(omit(MENU_LINKS, \"Sign In\"), (path, label) => {\r\n              return (\r\n                <div key={label} className=\"redirect-links\">\r\n                  <Link\r\n                    to={path}\r\n                    className=\"navbar-redirect-link\"\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    {label}\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <Link\r\n            to=\"/profile\"\r\n            className=\"navbar-redirect-link\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"navbar-bottom-padding\"></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\r\nimport \"./styles.css\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nconst classes = {\r\n  icon: {\r\n    fontSize: \"3rem\",\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div className=\"footer-content\">\r\n        <IconButton>\r\n          <GitHubIcon style={classes.icon} />\r\n        </IconButton>\r\n        <IconButton>\r\n          <LinkedInIcon style={classes.icon} />\r\n        </IconButton>\r\n      </div>\r\n      please hire me\r\n    </div>\r\n  );\r\n}\r\n","import { HashRouter, Routes, Route } from \"react-router-dom\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Footer from \"./Components/Footer\";\r\nimport { get } from \"lodash\";\r\nimport { routes } from \"./Constants/routes\";\r\nimport { cloneElement, useState } from \"react\";\r\n\r\nconst FOOTER_HEIGHT = \"75px\";\r\nfunction App() {\r\n  const [pageTheme, setPageTheme] = useState(null);\r\n\r\n  const COMPONENT_ROUTES = routes.map((component, idx) => {\r\n    const componentWithColor = cloneElement(component.element, {\r\n      color: get(pageTheme, \"color\"),\r\n      backgroundColor: get(pageTheme, \"background\"),\r\n    });\r\n\r\n    return (\r\n      <Route key={idx} path={component.path} element={componentWithColor} />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <Navbar changeTheme={setPageTheme} />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            paddingBottom: FOOTER_HEIGHT,\r\n          }}\r\n        >\r\n          <Routes>{COMPONENT_ROUTES}</Routes>\r\n        </div>\r\n        <Footer />\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n \nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}